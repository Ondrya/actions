public static DataTable ToDataTable<T>(this IList<T> items)
{
    var tb = new DataTable(typeof(T).Name);

    PropertyInfo[] props = typeof(T).GetProperties(BindingFlags.Public | BindingFlags.Instance);

    foreach (PropertyInfo prop in props)
    {
        Type t = GetCoreType(prop.PropertyType);
        tb.Columns.Add(prop.Name, t);
    }

    foreach (T item in items)
    {
        var values = new object[props.Length];
        for (int i = 0; i < props.Length; i++)
        {
            values[i] = props[i].GetValue(item, null);
        }

        tb.Rows.Add(values);
    }

    return tb;
}

//Usage:
//var table = products.ToDataTable();

//Looking for a quick and dirty way to create a DataTable from a list of items?
//I got ya covered.
//This extension method takes an IList and each object's properties and converts the properties into fields and places the data into a datatable.
